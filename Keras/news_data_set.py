# -*- coding: utf-8 -*-
"""News_data_set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kBSeaHBtnz9C40QRUAUGhtWvDc4fgJMG
"""

from keras.datasets import reuters
import numpy as np
from keras.utils import to_categorical
from keras import models
from keras import layers

(x_train, y_train) , (x_test, y_test) = reuters.load_data(num_words = 10000)



def oneHotFunc(sequences, dimension = 10000):
  output = np.zeros( (sequences.shape[0], dimension) )
  
  for idx ,sequence in enumerate(sequences):
    output[idx, sequence] = 1  
  return output


x_train = oneHotFunc(x_train)
y_train = to_categorical(y_train)


x_t = x_train[:5000]
x_v = x_train[5000:]

y_t = y_train[:5000]
y_v = y_train[5000:]

nn = models.Sequential()

nn.add( layers.Dense( 64,  activation = 'relu', input_shape=(10000,)) )
nn.add( layers.Dense( 64, activation = 'relu') )
nn.add( layers.Dense( 46, activation = 'softmax') )

nn.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics= ['accuracy'])

nn.fit(x_t, y_t, validation_data = (x_v, y_v), batch_size = 64, epochs = 20)

